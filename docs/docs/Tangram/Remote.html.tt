[% top = '../../' %]
[% title = 'POD: Tangram::Remote - represent persistent objects in client space' %]
[% INCLUDE header.tt %]


<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->

<ul>

	<li><a href="#name">NAME</a></li>
	<li><a href="#synopsis">SYNOPSIS</a></li>
	<li><a href="#description">DESCRIPTION</a></li>
</ul>
<!-- INDEX END -->

<hr />
<p>
</p>
<h1><a name="name">NAME</a></h1>
<p>Tangram::Remote - represent persistent objects in client space</p>
<p>
</p>
<hr />
<h1><a name="synopsis">SYNOPSIS</a></h1>
<pre>
   use Tangram;</pre>
<pre>
   $remote = $storage-&gt;remote( $class );
   @remotes = $storage-&gt;remote( @classes );</pre>
<pre>
   ... $remote-&gt;{$field} ...</pre>
<p>
</p>
<hr />
<h1><a name="description">DESCRIPTION</a></h1>
<p>A Remote object is a client-side representation of an object that
resides in a database.  It has the same fields as a normal object of
the same class - as declared in the Schema associated to the database
the Remote was obtained from.  The values of the fields are not normal
Perl values, but <a href="/docs/Tangram/Expr.html">the Tangram::Expr manpage</a>s that will be evaluated on the
database server side.</p>
<p>Remote objects are somewhat similar to SQL table aliases.</p>

[% INCLUDE footer.tt %]
